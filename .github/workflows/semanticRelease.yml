name: Semantic Release and Unity Build

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '14'

      - name: Install semantic-release
        run: npm install -g semantic-release@17 @semantic-release/git@10

      - name: Semantic Release
        run: npx semantic-release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - uses: game-ci/unity-builder@v4
        env:
          UNITY_LICENSE: ${{ secrets.UNITY_LICENSE }}
          UNITY_EMAIL: ${{ secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets.UNITY_PASSWORD }}
        with:
          targetPlatform: WebGL

      - uses: actions/upload-artifact@v3
        with:
          name: ProchaineStation
          path: BuildZip

      # Create a tag with the next version
      - name: Create Tag
        run: git tag -a v${{ steps.semantic_release.outputs.next_release_version }} -m "Version v${{ steps.semantic_release.outputs.next_release_version }}"
        if: success() && steps.semantic_release.outputs.next_release_version != ''

      # Push the new tag to the repository
      - name: Push Tag
        run: git push origin v${{ steps.semantic_release.outputs.next_release_version }}
        if: success() && steps.semantic_release.outputs.next_release_version != ''

      # Publish build zip file as a release asset
      - name: Upload Build as Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.repository.releases[0].upload_url }}
          asset_path: ./BuildZip/ProchaineStation.zip
          asset_name: ProchaineStation.zip
          asset_content_type: application/zip
