name: Upload Latest Artifact to Release

on:
  push:
    branches:
      - main

jobs:
  upload-artifact:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        
      - name: Determine Latest Tag and Release
        id: check_tag_release
        run: |
          git fetch -a
          latest_tag=$(git describe --tags `git rev-list --tags --max-count=1`)
          echo "::set-output name=latest_tag::$latest_tag"

          release_info=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/latest")
          
          latest_release_tag=$(echo "$release_info" | jq -r '.tag_name')
          echo "::set-output name=latest_release_tag::$latest_release_tag"

      - name: Determine Action
        id: determine_action
        run: |
          if [ "${{ steps.check_tag_release.outputs.latest_tag }}" != "${{ steps.check_tag_release.outputs.latest_release_tag }}" ]; then
            echo "::set-output name=action::create_release"
          else
            echo "::set-output name=action::upload_to_existing_release"
          fi

      - name: Read Changelog File
        id: read_changelog
        run: |
          changelog=$(cat ./docs/CHANGELOG.md)
          echo "::set-output name=changelog::$changelog"

      - name: Create Release
        if: steps.determine_action.outputs.action == 'create_release'
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.check_tag_release.outputs.latest_tag }}
          release_name: Release ${{ steps.check_tag_release.outputs.latest_tag }}
          body: ${{ steps.read_changelog.outputs.changelog }}
          draft: false
          prerelease: false

      - name: Get Latest Release Upload URL
        id: get_release_upload_url
        run: |
          release_upload_url=$(curl -s -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Accept: application/vnd.github.v3+json" \
          "https://api.github.com/repos/${{ github.repository }}/releases/latest" | jq -r '.upload_url')

          echo "::set-output name=release_upload_url::$release_upload_url"

      - name: Upload Artifact to Release
        run: |
          release_upload_url=$(echo "${{ steps.get_release_upload_url.outputs.release_upload_url }}" | sed 's/{?name,label}//')
          tag_name="${{ steps.check_tag_release.outputs.latest_tag }}"
          mv ProchaineStation.zip "ProchaineStation-${tag_name}.zip"
          curl -X POST -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/zip" \
          --data-binary "@ProchaineStation-${tag_name}.zip" "$release_upload_url?name=ProchaineStation-${tag_name}.zip"
